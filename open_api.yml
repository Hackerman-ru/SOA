openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API для управления пользователями, включая регистрацию, авторизацию и управление профилем.

servers:
  - url: http://localhost:{port}/api/v1
    description: Локальный сервер разработки
    variables:
      port:
        default: 8080
        description: Порт, на котором запущен сервер.

paths:
  /register:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterData'
      responses:
        '200':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer
        '409':
          description: Пользователь с таким именем или email уже существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Ошибка сервера при регистрации пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /login:
    post:
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginData'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
              example: jwt=token; Path=/; HttpOnly; Secure; SameSite=Strict; Max-Age=86400
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Ошибка сервера при авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /logout:
    post:
      summary: Выход из системы
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Успешный выход из системы
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
              example: jwt=; Path=/; HttpOnly; Secure; SameSite=Strict; Max-Age=0

  /profile/my:
    get:
      summary: Получение профиля текущего пользователя
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Профиль пользователя успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Ошибка сервера при получении профиля
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Обновление профиля текущего пользователя
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: Профиль пользователя успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Ошибка сервера при обновлении профиля
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /profile/{user_id}:
    get:
      summary: Получение профиля пользователя по ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Профиль пользователя успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Ошибка сервера при получении профиля
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    RegisterData:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string

    LoginData:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    UserUpdateRequest:
      type: object
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
          format: date
        phone_number:
          type: string

    UserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
          format: date
        phone_number:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: jwt
